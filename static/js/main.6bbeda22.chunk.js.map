{"version":3,"sources":["overlayStyles.js","App.js","index.js"],"names":["overlay","height","width","position","StayInPlaceZIndex","SitOnTopLeft","top","backgroundColor","BlackFallbackColorBackgroundColor","BlackWOpacityOverflowX","DisableHorizontalScrollTransition","overlayContent","textAlign","marginTop","color","Overlay","props","overlayContainer","document","createElement","body","appendChild","removeChild","this","ReactDOM","createPortal","style","children","React","Component","App","state","showOverlay","toggleOverlay","setState","prevState","onClick","rootElement","getElementById","render"],"mappings":"sKAAaA,EAAU,CACrBC,OAAQ,OACRC,MAAO,OACPC,SAAU,QACVC,kBAAmB,IACnBC,aAAc,IACdC,IAAK,IACLC,gBAAiB,aACjBC,kCAAmC,mBACnCC,uBAAwB,SACxBC,kCAAmC,QAGxBC,EAAiB,CAC5BR,SAAU,WACVG,IAAK,MACLJ,MAAO,OACPU,UAAW,SACXC,UAAW,OACXC,MAAO,S,OCfHC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,iBAAmBC,SAASC,cAAc,OAC/CD,SAASE,KAAKC,YAAY,EAAKJ,kBAJd,E,wDAOnB,WACEC,SAASE,KAAKE,YAAYC,KAAKN,oB,oBAGjC,WACE,OAAOO,IAASC,aACd,qBAAKC,MAAO1B,EAAZ,SACE,qBAAK0B,MAAOf,EAAZ,SAA6BY,KAAKP,MAAMW,aAE1CJ,KAAKN,sB,GAjBWW,IAAMC,WAsBPC,E,4MACnBC,MAAQ,CACNC,aAAa,G,EAGfC,cAAgB,WACd,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEH,aAAcG,EAAUH,iB,4CAIrC,WACE,OACE,gCACE,2CACCT,KAAKQ,MAAMC,aACV,cAAC,EAAD,UACE,kDACkB,IAChB,wBAAQI,QAASb,KAAKU,cAAtB,wBAIN,wBAAQG,QAASb,KAAKU,cAAtB,iC,GAvByBL,IAAMC,WCrBjCQ,EAAcnB,SAASoB,eAAe,QAC5Cd,IAASe,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFF,K","file":"static/js/main.6bbeda22.chunk.js","sourcesContent":["export const overlay = {\n  height: '100%',\n  width: '100%',\n  position: 'fixed',\n  StayInPlaceZIndex: '1',\n  SitOnTopLeft: '0',\n  top: '0',\n  backgroundColor: 'rgb(0,0,0)',\n  BlackFallbackColorBackgroundColor: 'rgba(0,0,0, 0.9)',\n  BlackWOpacityOverflowX: 'hidden',\n  DisableHorizontalScrollTransition: '0.5s'\n};\n\nexport const overlayContent = {\n  position: 'relative',\n  top: '25%',\n  width: '100%',\n  textAlign: 'center',\n  marginTop: '30px',\n  color: 'white'\n};\n","import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport { overlay, overlayContent } from './overlayStyles';\n\nclass Overlay extends React.Component {\n  constructor(props) {\n    super(props);\n    // Create container DOM element and append to DOM.\n    this.overlayContainer = document.createElement('div');\n    document.body.appendChild(this.overlayContainer);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.overlayContainer);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      <div style={overlay}>\n        <div style={overlayContent}>{this.props.children}</div>\n      </div>,\n      this.overlayContainer\n    );\n  }\n}\n\nexport default class App extends React.Component {\n  state = {\n    showOverlay: false\n  };\n\n  toggleOverlay = () => {\n    this.setState((prevState) => {\n      return { showOverlay: !prevState.showOverlay };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Dashboard</h1>\n        {this.state.showOverlay && (\n          <Overlay>\n            <div>\n              Overlay Content{' '}\n              <button onClick={this.toggleOverlay}>Close</button>\n            </div>\n          </Overlay>\n        )}\n        <button onClick={this.toggleOverlay}>Open Overlay</button>\n      </div>\n    );\n  }\n}\n\n// render(<App />, document.getElementById('root'));\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}